@model DAL.Models.Producto

@{
    ViewBag.Title = "Editar Producto";
}

<div class="row">
    <div class="col-sm-12">
        <div class="card-box">
            <div class="card-head">
                <header>Editar Producto</header>
                <button id="panel-button"
                        class="mdl-button mdl-js-button mdl-button--icon pull-right hidden"
                        data-upgraded=",MaterialButton">
                    <i class="material-icons">more_vert</i>
                </button>
                <ul class="mdl-menu mdl-menu--bottom-right mdl-js-menu mdl-js-ripple-effect"
                    data-mdl-for="panel-button">
                    <li class="mdl-menu__item"><i class="material-icons">assistant_photo</i>Action</li>
                    <li class="mdl-menu__item"><i class="material-icons">print</i>Another action</li>
                    <li class="mdl-menu__item"><i class="material-icons">favorite</i>Something else here</li>
                </ul>
            </div>
            @using (Html.BeginForm())
            {
                @Html.AntiForgeryToken()
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                @Html.HiddenFor(model => model.CodPro)

                <div class="card-body row">

                    <div class="col-lg-6 p-t-20">
                        <div class="mdl-textfield mdl-js-textfield mdl-textfield--floating-label txt-full-width">
                            @Html.EditorFor(model => model.NomPro, new { htmlAttributes = new { @class = "mdl-textfield__input" } })
                            @Html.LabelFor(model => model.NomPro, htmlAttributes: new { @class = "mdl-textfield__label" })
                            @Html.ValidationMessageFor(model => model.NomPro, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="col-lg-6 p-t-20">
                        @Html.LabelFor(model => model.CodLin, "CodLin", htmlAttributes: new { @class = "mdl-textfield__label col-md-2" })
                        <br />
                        @Html.DropDownList("CodLin", null, htmlAttributes: new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.CodLin, "", new { @class = "text-danger" })
                    </div>
                    <div class="col-lg-6 p-t-20">
                        @Html.LabelFor(model => model.CodSubLin, "CodSubLin", htmlAttributes: new { @class = "mdl-textfield__label col-md-2" })
                        <br />
                        @Html.DropDownList("CodSubLin", null, htmlAttributes: new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.CodSubLin, "", new { @class = "text-danger" })
                    </div>
                    <div class="col-lg-6 p-t-20">
                        <div class="mdl-textfield mdl-js-textfield mdl-textfield--floating-label txt-full-width">
                            @Html.EditorFor(model => model.estado, new { htmlAttributes = new { @class = "mdl-textfield__input" } })
                            @Html.LabelFor(model => model.estado, htmlAttributes: new { @class = "mdl-textfield__label" })
                            @Html.ValidationMessageFor(model => model.estado, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="col-lg-6 p-t-20">
                        @Html.LabelFor(model => model.CodUniMed, "CodUniMed", htmlAttributes: new { @class = "mdl-textfield__label col-md-2" })
                        <br />
                        @Html.DropDownList("CodUniMed", null, htmlAttributes: new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.CodSubLin, "", new { @class = "text-danger" })
                    </div>
                    <div class="col-lg-6 p-t-20">
                        <div class="mdl-textfield mdl-js-textfield mdl-textfield--floating-label txt-full-width">
                            @Html.EditorFor(model => model.precio, new { htmlAttributes = new { @class = "mdl-textfield__input" } })
                            @Html.LabelFor(model => model.precio, htmlAttributes: new { @class = "mdl-textfield__label" })
                            @Html.ValidationMessageFor(model => model.precio, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="col-lg-6 p-t-20">
                        <div class="mdl-textfield mdl-js-textfield mdl-textfield--floating-label txt-full-width">
                            @Html.EditorFor(model => model.afectoigv, new { htmlAttributes = new { @class = "mdl-textfield__input" } })
                            @Html.LabelFor(model => model.afectoigv, htmlAttributes: new { @class = "mdl-textfield__label" })
                            @Html.ValidationMessageFor(model => model.afectoigv, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="col-lg-6 p-t-20">
                        <div class="mdl-textfield mdl-js-textfield mdl-textfield--floating-label txt-full-width">
                            @Html.EditorFor(model => model.TipPro, new { htmlAttributes = new { @class = "mdl-textfield__input" } })
                            @Html.LabelFor(model => model.TipPro, htmlAttributes: new { @class = "mdl-textfield__label" })
                            @Html.ValidationMessageFor(model => model.TipPro, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="col-lg-12 p-t-20 text-right">
                        <button type="submit" class="mdl-button mdl-js-button mdl-button--raised mdl-js-ripple-effect m-b-10 m-r-20 btn-pink">Salvar</button>
                    </div>

                </div>
            }
        </div>
    </div>
</div>



<div class="row">
    <div class=" pull-left col-12">
        <div class="page-title">Fotos del producto</div>
    </div>
    <div class="pull-left col-12">
        @Html.ActionLink("Crear Nueva Foto", "Create", "TabFotos", new { CodPro = Model.CodPro }, new { @class = "btn btn-success btn-rounded waves-effect waves-light m-t-20" })

    </div>
</div>

<br />


<div class="row">
    @foreach (var item in Model.TabFotos)
    {
        <div class="col-lg-3 col-md-6 col-12 col-sm-6">
            <div class="blogThumb">
                <div class="thumb-center"><img class="img-responsive" height="200" width="300" alt="user" src="../../assets/img/blog/blog1.jpg"></div>
                <div class="white-box">
                    <p>
                        Tipo:
                        @Html.DisplayFor(modelItem => item.Tipo)
                        <br />
                        Item:
                        @Html.DisplayFor(modelItem => item.item)
                        <br />
                        Titulo:
                        @Html.DisplayFor(modelItem => item.titulo)
                        <br />
                        Descripcion:
                        @Html.DisplayFor(modelItem => item.descripcion)
                        <br />
                        Foto:
                        @Html.DisplayFor(modelItem => item.foto)
                    </p>
                    @Html.ActionLink("Editar", "Edit", "TabFotos", new { Tipo = item.Tipo.Trim(), Codigo = item.Codigo.Trim(), item = item.item }, new { @class = "btn btn-info btn-rounded waves-effect waves-light m-t-20" })
                    @Html.ActionLink("Eliminar", "Delete", "TabFotos", new { Tipo = item.Tipo.Trim(), Codigo = item.Codigo.Trim(), item = item.item }, new { @class = "btn btn-danger btn-rounded waves-effect waves-light m-t-20" })
                </div>
            </div>
        </div>
    }
</div>





@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
