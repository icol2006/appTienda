@model DAL.Models.Producto

@{
    ViewBag.Title = "Edit";
}


<h2>Edit</h2>


<ul class="nav nav-tabs">
    <li class="active">
        <a href="#tab_1" data-toggle="tab">Datos Producto</a>
    </li>
    <li>
        <a href="#tab_2" data-toggle="tab">Fotos</a>
    </li>

</ul>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()


<div class="tab-content">
    <div class="tab-pane  active" id="tab_1">


        <div class="form-horizontal">
            <h4>Producto</h4>
            <hr />
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            @Html.HiddenFor(model => model.CodPro)

            <div class="form-group">
                @Html.LabelFor(model => model.CodLin, "CodLin", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.DropDownList("CodLin", null, htmlAttributes: new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.CodLin, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.CodSubLin, "CodSubLin", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.DropDownList("CodSubLin", null, htmlAttributes: new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.CodSubLin, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.NomPro, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.NomPro, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.NomPro, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.estado, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.estado, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.estado, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.CodUniMed, "CodUniMed", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.DropDownList("CodUniMed", null, htmlAttributes: new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.CodUniMed, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.precio, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.precio, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.precio, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.afectoigv, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.afectoigv, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.afectoigv, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.TipPro, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.TipPro, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.TipPro, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <input type="submit" value="Save" class="btn btn-default" />
                </div>
            </div>
        </div>


    </div>
    @Html.ActionLink("Crear Nuevo", "Create", "TabFotos", new { CodPro = Model.CodPro}, null)

    <div class="tab-pane fade" id="tab_2">
        <table class="table">


            @foreach (var item in Model.TabFotos)
            {

                <tr>
                    <td>
                        Tipo:
                        @Html.DisplayFor(modelItem => item.Tipo)
                        <br />
                        Codigo producto:
                        @Html.DisplayFor(modelItem => item.Codigo)
                        <br />
                        Item
                        @Html.DisplayFor(modelItem => item.item)
                        <br />
                        Titulo
                        @Html.DisplayFor(modelItem => item.titulo)
                        <br />
                        Descripcion
                        @Html.DisplayFor(modelItem => item.descripcion)
                        <br />
                        Foto
                        @Html.DisplayFor(modelItem => item.foto)
                    </td>
                    <td>
                        @Html.ActionLink("Editar", "Edit", "TabFotos", new { Tipo = item.Tipo.Trim(), Codigo = item.Codigo.Trim(), item = item.item }, null)
                        @Html.ActionLink("Eliminar", "Delete", "TabFotos", new { Tipo = item.Tipo.Trim(), Codigo = item.Codigo.Trim(), item = item.item }, null)
                    </td>
                </tr>
            }

        </table>

    </div>
</div>


    <div>
        @Html.ActionLink("Back to List", "Index")
    </div>
}
@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
